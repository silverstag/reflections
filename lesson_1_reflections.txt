How did viewing a diff between two versions of a file help you see the bug that was introduced?

Debugging a program using log statements and debugging tools is helpful. But using diff on old 
and new files we were able to find out the typographical errors without using a debugger or log
statements.

How could having easy access to the entire history of a file make you a more efficient programmer
in the long term?

Having an older version of my files allows me to see where my code broke or what specific change
is making my program behave erratic. It will also save me from trouble of keeping track of all
previous versions. Version Control will improve productivity by eliminating the need and effort
of keeping track of all changes manually.

Why do you think some version control systems, like Git, allow saving multiple files in one 
commit, while others, like Google Docs, treat each file separately?
To preserve logical ties between files.

How can you use the commands git log and git diff to view the history of files?
git log can be used to find all commits to a repo and then we can use git diff to see what 
changed between two separate commits.

How might using version control make you more confident to make changes that could break something?
Since I know Git's got my back. I don't have to worry about breaking my code. I can always
checkout an earlier commit and fix an issue.

Now that you have your workspace set up, what do you want to try using Git for?
I want to use Git for my Nanodegree program.